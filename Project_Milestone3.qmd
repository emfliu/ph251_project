---
title: "Project Milestone 3"
author: "Liza Lutker and Emily Liu"
format: html
editor: visual
---

# Data Cleaning that will be needed

-   County variable names differ between data sets; need to ensure the same case and syntax. Use ALL CAPS, no "county" as in the asthma ED visits file

-   Exposures: CES score and environmental measures can be operationalized as continuous but could consider quintiles or quartiles to make them more interpretable.

-   Outcome: ED visit rates can be operationalized as continuous but could also consider categorization to make it more interpretable.

-   Year of ED visit: We need to factor this variable.

## Cal Enviro Screen datasets

-   Recode common variable(s) to be combined with other datasets 

    Identify environmental measure(s) of interest and summarize into a county-level value: CES score, traffic, PM 2.5, poverty

-   Summarize CalEnviroScreen score into a county level variable - median for traffic, mean for pm 2.5, median CES score, at or below 75th percentile for poverty

-   NOTE: the methods for each summary variable (environmental measure and  CalEnviroScreen score) should be different (i.e. if you calculate the mean for one, please use another method for the other). If you look at more than one environmental measure you can re-use summarization methods for this. 

## Asthma ED dataset

-   Recode common variable(s) to be combined with other datasets - no need to recode as this version of county is what we'll use

-   Recode values that are reading in incorrectly

-   Subset to most recent year and county level data

-   Select demographic strata of interest - race/ethnicity, age available. Examine by race, all age groups.

-   Pivot table to only include one row per county

Load in data

```{r}
library(tidyverse)
library(janitor)

getwd()

#bring in files and clean up column names
ed <- read.csv('../Project_Data_Sources/scenario_3/chhs_asthma_ed.csv') %>% 
  clean_names()

demog <- read.csv('../Project_Data_Sources/scenario_3/calenviroscreen_scores_demog_2021.csv') %>% 
  clean_names()

ces <- read.csv('../Project_Data_Sources/scenario_3/calenviroscreen_measures_2021.csv') %>% 
  clean_names()

hist(ces$traffic)
summary(ces$traffic)
quantile(ces$traffic, probs = c(.75, .8, .85, .9, .95, .99), na.rm=TRUE)
hist(ces$pm2_5)
hist(demog$ces_4_0_score)
hist(ces$poverty)

```

```{r}
#look at values for variables and see if they need any adjustment
summary(ed)
#will want to factor year
unique(ed$strata)
unique(ed$strata_name)
table(ed$strata_name, ed$year)
#these values are reading in oddly and need fixing plus there are different ways racial groups are ID'ed across years (Asian only used in 2019, otherwise use Asian/PI; Multi-race used in 2020 but otherwise use Multi-Race. Not sure what to do about the fact that Asian/PI and NHPI seem to be used concurrently in 2019 and 2020 - leave as is) 
unique(ed$age_group)
#also reading in oddly and need recoding

ed1 <- ed %>% 
  mutate(str_name = case_when(
      strata_name == "All ages" ~ "all_ages",
      strata_name == "0\x9617 years" ~ "0_17",
      strata_name == "18+ years" ~ "18plus",      
      strata_name == "0\x964 years" ~ "0_4",
      strata_name == "5\x9617 years" ~ "5_17",
      strata_name == "18\x9664 years" ~ "18_64",
      strata_name == "65+ years" ~ "65plus",
      strata_name == "White" ~ "WHITE",
      strata_name == "Black" ~ "BLACK",
      strata_name == "Hispanic" ~ "HISP",
      strata_name %in% c("Asian/PI", "Asian") ~ "API",
      strata_name == "NHPI" ~ "NHPI",
      strata_name == "AI/AN" ~ "AIAN",
      strata_name %in% c("Multi-Race", "Multi-race") ~ "MULTI",
      )) %>% 
  mutate(age_grp = case_when(
      age_group == "All ages" ~ "all_ages",
      age_group == "0\x9617 years" ~ "0_17",
      age_group == "18+ years" ~ "18plus",      
      age_group == "0\x964 years" ~ "0_4",
      age_group == "5\x9617 years" ~ "5_17",
      age_group == "18\x9664 years" ~ "18_64",
      age_group == "65+ years" ~ "65plus",
  )) %>% 
  mutate(yr=as.factor(year)) %>% 
  select(!c(strata_name, age_group, year))


# unique(ed1$str_name)
# table(ed1$strata_name, ed1$str_name, useNA = "always")
# unique(ed1$age_grp)
# table(ed1$age_group, ed1$age_grp, useNA = "always")
# unique(ed1$yr)


```

```{r}
#now subset to years, strata (all age groups by race) of interest and pivot to have one row per county (since examining all ages combined, use age-adjusted values)

ed2 <- ed1 %>% 
  filter(yr == "2020") %>% 
  filter(age_grp == "all_ages") %>% 
  select(!c(strata, number_of_ed_visits, age_grp, yr)) %>% 
  pivot_wider(names_from = str_name, values_from = age_adjusted_ed_visit_rate) %>% 
  rename(TOTAL = all_ages)

```
